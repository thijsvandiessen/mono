name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:
    types: [checks_requested]
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.REPO_SCOPED_TOKEN }}
      # TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      # TURBO_TEAM: ${{ secrets.VERCEL_ORG_ID }}
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Enable Corepack
        run: corepack enable

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: npm ci

      - name: Validate fast with oxlint
        run: npx oxlint@0.2.8 -D correctness -D perf -A debugger -A eqeqeq -c ./.eslintrc.json

      - name: check formatting, eslint and typescript
        run: npx turbo@2.4.4 run lint

      - name: Build project
        run: npx turbo@2.4.4 run build

      - name: Test project
        run: npx turbo@2.4.4 run test
